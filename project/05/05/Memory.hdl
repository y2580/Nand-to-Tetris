// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/5/Memory.hdl
/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid and reads 0. Access to any address
 * in the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the Screen
 * and Keyboard chip specifications given in the lectures and the book.
 */

 /**
    Note:
    RAM = 16K        =>  depend on in[14]==0
    screen = 8K      =>  depend on in[14]==1&&in[13]==0
    keyboard = 1     =>  depend on in[14]==1&&in[14]==1

    sel = {address[14],address[13]}
   {a, b, c, d} = {in, 0, 0, 0} if sel == 00
*                {0, in, 0, 0} if sel == 01
*                {0, 0, in, 0} if sel == 10
*                {0, 0, 0, in} if sel == 11
    warning:sel匯流排的位序，LSB 在前、MSB 在後
 **/

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    Or8Way(in=address[0..7],out=or1);
    Or8Way(in=address[5..12],out=or2);
    Or(a=or1,b=or2,out=low13);
    Mux16(a=out3,b=false,sel=low13,out=out4) ;

	DMux4Way(in=load,sel=address[13..14],a=ld1,b=ld2,c=ld3,d=ld4);
    Or(a=ld1,b=ld2,out=ld0) ;
    RAM16K(in=in,load=ld0,address=address[0..13],out=out1) ;
    Screen(in=in,load=ld3,address=address[0..12],out=out2) ;
    Keyboard(out=out3) ;
    Mux4Way16(a=out1,b=out1,c=out2,d=out4,sel=address[13..14],out=out) ;
}